Домашнее задание №8.
Формулировка задачи.
На вход программе подается 2 имени пользователя. Задача программы найти самую
короткую цепочку рукопожатий между этими пользователями. Рукопожатием считаем
только взаимоподписанных пользователей.

Подход к реализации.
Во время отладки Инстаграм довольно быстро обнаруживал активность бота и
приостанавливал доступ в аккаунт до подтверждения через sms либо блокировал
доступ к query hash.
Это повлияло на реализацию:
- используется только информация об "исходящих" подписках пользователя
- скачивание сделано не параллельное, а пользователь за пользователем
- выбор следующего пользователя для скачивания организован таким образом, чтобы
по возможности быстрее установить связь между заданными узлами (см. ниже)
- граф сохраняется и может использоваться при последующем запуске

Таким образом, строго говоря, получается, что решена не совсем та задача,
которая сформулирована: алгоритм не гарантирует, что найденная цепочка самая
короткая, однако нацелен на поиск цепочки за наименьшее количество действий.

Алгоритм выбора следующего пользователя для скачивания его связей по заданным
крайним точкам, в зависимости от текущего состояния графа:
- Приоритет 0: новый ранее неизвестный пользователь
- Приоритет 1: крайняя точка - это тупиковый (deadend) пользователь, на
которого кто-то подписан, но о подписках которого мы ничего пока не знаем
- Приоритет 2: потенциальные мостики
-- прямой потенциальный мостик = тупиковый пользователь, на которого подписан и
стартовый пользователь, и финишный
-- длинный мостик = тупиковый пользователь, на которого подписан кто-то из графа
рукопожатий стартового пользователя и кто-то из графа рукопожатий финишного
Если мостиков много, выбирается по кратчайшему пути.
- Приоритет 3: взвешенно-рандомный пользователь
Самая частая ситуация: у стартового, и у финишного пользователя есть свой граф,
они не пересекаются. Следующего пользователя берем рандомно, но через веса даем
приоритет пользователю с малым графом.

Пример работы.
Интересно было найти связь между людьми из разных сфер деятельности.
В данном случае, выбраны два человека
- Павел Воля, шоумен
- Lex Fridman (он же Алексей Федотов), популяризатор искусственного интеллекта и
 преподаватель MIT

Результат:
Павел Воля | Pavel Volya (pavelvolyaofficial)
    <-> 13 (timatiofficial)
    <-> Dan Bilzerian (danbilzerian)
    <-> Joe Rogan (joerogan)
    <-> Lex Fridman (lexfridman)

Собраны списки following 32 пользователей.

P.S. Для поиска кратчайших путей использован алгоритм Дейкстры из курса
"Алгоритмы и структуры данных на Python" Geekbrains, слегка "подкрученный" под
нужды программы.
